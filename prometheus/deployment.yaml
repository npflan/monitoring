apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: core
  annotations:
    argocd.argoproj.io/sync-wave: "5"
  name: prometheus
  namespace: prometheus
spec:
  minReadySeconds: 30
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/component: core
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
      name: prometheus
      labels:
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/component: core
    spec:
      serviceAccountName: prometheus
      securityContext:
        fsGroup: 2000
        runAsUser: 1000
        runAsNonRoot: true
      containers:
      - name: prometheus
        image: quay.io/prometheus/prometheus:v2.21.0
        args:
          - '--storage.tsdb.retention=365d'
          - '--config.file=/etc/prometheus/prometheus.yaml'
          - '--storage.tsdb.path=/etc/prometheus/data'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--web.enable-lifecycle'
          - '--log.format=json'
          - '--web.enable-admin-api'
        ports:
        - name: webui
          containerPort: 9090
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 30
          failureThreshold: 3
          successThreshold: 1
        resources:
          requests:
            cpu: "1"
            memory: 1Gi
          limits:
            cpu: "4"
            memory: 5Gi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: data
          mountPath: /etc/prometheus/data

      volumes:
      - name: config-volume
        configMap:
          name: prometheus
      - name: data
        persistentVolumeClaim:
          claimName: prometheus
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  capacity:
    storage: 50Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: prometheus
  local:
    path: /kube/prometheus
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - erebus
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: prometheus
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  storageClassName: prometheus
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
