apiVersion: v1
kind: List
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: prometheus
    name: prometheus
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: prometheus
      spec:
        containers:
        - args:
          - -config.file=/prometheus/config/prometheus.yml
          - -storage.local.path=/prometheus/data
          - -storage.local.retention=768h
          - -alertmanager.url=http://alertmanager.monitoring.svc.cluster.local
          - -web.external-url=http://prom.npf
          volumeMounts:
            - mountPath: /prometheus/data
              name: iscsipd-prom-rw
            - mountPath: /prometheus/config
              name: prom-config
          image: prom/prometheus
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2048M
        volumes:
        - iscsi:
            fsType: ext4
            iqn: iqn.2001-05.com.equallogic:0-8a0906-6e0b41907-3790000001f59bdb-k8s.prometheus
            iscsiInterface: default
            lun: 0
            portals:
            - 192.168.255.11:3260
            - 192.168.255.12:3260
            - 192.168.255.13:3260
            - 192.168.255.14:3260
            targetPortal: 192.168.255.10:3260
          name: iscsipd-prom-rw
        - configMap:
            items:
            - key: prometheus.yml
              path: prometheus.yml
            - key: alert.rules
              path: alert.rules
            name: prometheus
          name: prom-config
- apiVersion: v1
  kind: Service
  metadata:
    name: prometheus
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 9090
    selector:
      app: prometheus
    sessionAffinity: None
- apiVersion: v1
  data:
    alert.rules: |
      ALERT service_down
        IF (up == 0)
        ANNOTATIONS {
            summary = "Can not pull data from job {{ $labels.job }} on instance {{ $labels.instance }}",
        }
      ALERT icmp_probing_failed
        IF (probe_success == 0)
        ANNOTATIONS {
            summary = "ICMP probing failed for {{ $labels.instance }}",
        }
      ALERT multiple_uplink_ports_active
        IF (sum(ifOperStatus{ifDescr=~"GigabitEthernet.*",job="snmp-access"}) BY (instance) == 2)
        ANNOTATIONS {
            summary = "Both uplink ports are active on {{ $labels.instance }}",
        }
      ALERT missing_power_redundency
        IF (ciscoEnvMonSupplyState != 1)
        ANNOTATIONS {
            summary = "Redundent power not available for {{ $labels.instance }}",
        }
      ALERT low_uplink_speed
        IF (ifOperStatus{job="snmp-access"} == 1 and ifSpeed{job="snmp-access"} != 1000000000)
        ANNOTATIONS {
            summary = "Instance {{ $labels.instance }} uplink speed is low",
        }
    prometheus.yml: |
      # my global config
      global:
        scrape_interval:     15s # By default, scrape targets every 15 seconds.
        evaluation_interval: 15s # By default, scrape targets every 15 seconds.
        # scrape_timeout is set to the global default (10s).
        # Attach these labels to any time series or alerts when communicating with
        # external systems (federation, remote storage, Alertmanager).
        external_labels:
            monitor: 'NPF'

      # Load and evaluate rules in this file every 'evaluation_interval' seconds.
      rule_files:
        - "alert.rules"
        # - "first.rules"
        # - "second.rules"

      scrape_configs:
        # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
        - job_name: 'prometheus'

          # Override the global default and scrape targets from this job every 5 seconds.
          scrape_interval: 5s

          metrics_path: '/metrics'
          static_configs:
            - targets:
              - 'localhost:9090'

        - job_name: 'dns'
          dns_sd_configs:
          - refresh_interval: 15s
            names:
            - 'unbound-metrics.dns.svc.cluster.local'
            type: 'A'
            port: 9167
          relabel_configs:
          - source_labels: ['__address__']
            target_label:  'instance'

        - job_name: 'ping'
          dns_sd_configs:
          - refresh_interval: 15s
            names:
            - 'telemetry.access.npf'
            - 'telemetry.dist.npf'
            type: 'SRV'
          metrics_path: '/probe'
          params:
            module: [icmp]
          relabel_configs:
          - source_labels: ['__address__']
            regex:         '(.*):[0-9]+'
            target_label:  'instance'
            replacement:   '$1'
          - source_labels: [__address__]
            regex:         '(.*):[0-9]+'
            target_label:  '__param_target'
            replacement:   '$1'
          - target_label: __address__
            replacement: blackbox-exporter.monitoring.svc.cluster.local

        - job_name: 'snmp-dist'
          dns_sd_configs:
          - refresh_interval: 15s
            names:
            - 'telemetry.dist.npf'
            type: 'SRV'
          metrics_path: '/snmp'
          params:
            module: [dist]
          relabel_configs:
          - source_labels: ['__address__']
            regex:         '(.*):[0-9]+'
            target_label:  'instance'
            replacement:   '$1'
          - source_labels: [__address__]
            regex:         '(.*):[0-9]+'
            target_label:  '__param_target'
            replacement:   '$1'
          - target_label: __address__
            replacement: snmp-exporter.monitoring.svc.cluster.local

        - job_name: 'snmp-access'
          scrape_interval: 15s
          dns_sd_configs:
          - refresh_interval: 15s
            names:
            - 'telemetry.access.npf'
            type: 'SRV'
          metrics_path: '/snmp'
          params:
            module: [access]
          relabel_configs:
          - source_labels: ['__address__']
            regex:         '(.*):[0-9]+'
            target_label:  'instance'
            replacement:   '$1'
          - source_labels: [__address__]
            regex:         '(.*):[0-9]+'
            target_label:  '__param_target'
            replacement:   '$1'
          - target_label: __address__
            replacement: snmp-exporter.monitoring.svc.cluster.local
  kind: ConfigMap
  metadata:
    name: prometheus
